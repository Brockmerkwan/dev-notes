{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Dev Notes This site is built automatically by GitHub Actions using MkDocs . Add Markdown files under docs/ \u2014 they will appear in the site.","title":"Home"},{"location":"#dev-notes","text":"This site is built automatically by GitHub Actions using MkDocs . Add Markdown files under docs/ \u2014 they will appear in the site.","title":"Dev Notes"},{"location":"Dont_Panic_Dev_Error_Manual/","text":"Brock\u2019s Don't Panic \u2013 Dev Error Survival Manual See the PDF docs/Dont_Panic_Dev_Error_Manual.pdf for the formatted version.","title":"Brock\u2019s Don't Panic \u2013 Dev Error Survival Manual"},{"location":"Dont_Panic_Dev_Error_Manual/#brocks-dont-panic-dev-error-survival-manual","text":"See the PDF docs/Dont_Panic_Dev_Error_Manual.pdf for the formatted version.","title":"Brock\u2019s Don't Panic \u2013 Dev Error Survival Manual"},{"location":"README_Automation_Suite_Status/","text":"\u2699\ufe0f System Status \u2013 Automation Suite v1 Purpose: Automated nightly system audits and summary commits. Agent Description Schedule Status Logs com.brock.sysaudit Runs the defensive system audit, produces summary + baseline diff 02:00\u202fAM daily \u2705 /tmp/com.brock.sysaudit.out /err com.brock.sysaudit.commit Copies summaries to repo and commits/pushes 02:10\u202fAM daily \u2705 /tmp/com.brock.sysaudit.commit.out /err \ud83d\udcc1 File Locations Type Path Audit output ~/SysAudits/ Summaries ~/SysAudits/summaries/ Baselines ~/SysAudits/baselines/ Repo commits ~/Projects/devnotes/daily_logs/ \ud83e\udde0 Managing the Agents launchctl load ~/Library/LaunchAgents/com.brock.sysaudit.plist launchctl unload ~/Library/LaunchAgents/com.brock.sysaudit.plist launchctl load ~/Library/LaunchAgents/com.brock.sysaudit.commit.plist launchctl unload ~/Library/LaunchAgents/com.brock.sysaudit.commit.plist launchctl kickstart gui/$UID/com.brock.sysaudit launchctl kickstart gui/$UID/com.brock.sysaudit.commit","title":"\u2699\ufe0f System Status \u2013 Automation Suite v1"},{"location":"README_Automation_Suite_Status/#system-status-automation-suite-v1","text":"Purpose: Automated nightly system audits and summary commits. Agent Description Schedule Status Logs com.brock.sysaudit Runs the defensive system audit, produces summary + baseline diff 02:00\u202fAM daily \u2705 /tmp/com.brock.sysaudit.out /err com.brock.sysaudit.commit Copies summaries to repo and commits/pushes 02:10\u202fAM daily \u2705 /tmp/com.brock.sysaudit.commit.out /err","title":"\u2699\ufe0f System Status \u2013 Automation Suite v1"},{"location":"README_Automation_Suite_Status/#file-locations","text":"Type Path Audit output ~/SysAudits/ Summaries ~/SysAudits/summaries/ Baselines ~/SysAudits/baselines/ Repo commits ~/Projects/devnotes/daily_logs/","title":"\ud83d\udcc1 File Locations"},{"location":"README_Automation_Suite_Status/#managing-the-agents","text":"launchctl load ~/Library/LaunchAgents/com.brock.sysaudit.plist launchctl unload ~/Library/LaunchAgents/com.brock.sysaudit.plist launchctl load ~/Library/LaunchAgents/com.brock.sysaudit.commit.plist launchctl unload ~/Library/LaunchAgents/com.brock.sysaudit.commit.plist launchctl kickstart gui/$UID/com.brock.sysaudit launchctl kickstart gui/$UID/com.brock.sysaudit.commit","title":"\ud83e\udde0 Managing the Agents"},{"location":"RedTeam_Study_Checklist/","text":"Red-Team Study Checklist (High-Level, Non-Actionable) Purpose: learning roadmap for understanding attacker techniques and defensive countermeasures \u2014 no exploit code included . Ethics & Safe Practice Only test systems you own or have explicit permission to test. Use isolated labs (VM snapshots) and follow platform rules (TryHackMe, Hack The Box). Keep detailed logs and legal consent for any engagement. Topics (learning order) Foundations : TCP/IP, routing, Linux/macOS internals, Windows basics Enumeration : service discovery, port scanning, banner analysis (theory + detection) Vulnerabilities 101 : CVE lifecycle, patching, and common vulnerability classes (RCE, XSS, CSRF) Privilege Escalation (theory) : SUID/SGID, sudo misconfigurations, credential/credential stores \u2014 learn defenses , not exploit steps Persistence & Evasion (theory) : cron jobs, startup agents, anomalous services \u2014 detection + mitigation Lateral Movement (theory) : authentication delegation, SSH keys, network segmentation \u2014 focus on hardening Logging & Monitoring : SIEM basics, log collection, alert tuning, EDR concepts Forensics Basics : file timeline analysis, memory capture theory, evidence preservation Red-Team Tools (study list) : LinPEAS (read-only study), BloodHound (graph theory), Adversary Emulation frameworks \u2014 read docs & defensive mappings Cobalt Strike / Emulation (theory only) : understand concepts, do not use unauthorized tools Defensive Mapping (how offensive techniques map to detections) Port Scans / Recon \u2192 Detection: high-rate SYN/connection attempts, IDS/IPS alerts, rare source IPs SUID Abuse \u2192 Detection: new/changed SUID binaries, unexpected owner changes, file integrity hashes Cron / Startup Persistence \u2192 Detection: new crontab entries, unknown launch agents, timestamp anomalies Lateral Movement (SSH keys) \u2192 Detection: new authorized_keys, unusual SSH logins, key fingerprints changes Credential Theft \u2192 Detection: abnormal access to secret stores, high-volume file reads, new processes accessing /etc/shadow or keyring locations Malicious Containers \u2192 Detection: unknown container images, outbound connections from containers, new container runtimes Labs & Practice (legal) TryHackMe: structured rooms for beginners\u2192intermediate Hack The Box: realistic labs (use safe lab subnets) Metasploitable / Vuln VM images: isolated in local VM networks with snapshots Build a lab: Controller machine + target VMs + a snapshot policy before tests Learning Resources \u201cThe Practice of Network Security Monitoring\u201d \u2014 practical monitoring tactics Linux hardening guides (CIS Benchmarks) Vendor docs: Microsoft, Apple, major Linux distros for secure defaults Project documentation: LinPEAS, Osquery, Wazuh (for defensive study) Ethics Reminder Always have permission. Use your skills to defend, not to harm.","title":"Red-Team Study Checklist (High-Level, Non-Actionable)"},{"location":"RedTeam_Study_Checklist/#red-team-study-checklist-high-level-non-actionable","text":"Purpose: learning roadmap for understanding attacker techniques and defensive countermeasures \u2014 no exploit code included .","title":"Red-Team Study Checklist (High-Level, Non-Actionable)"},{"location":"RedTeam_Study_Checklist/#ethics-safe-practice","text":"Only test systems you own or have explicit permission to test. Use isolated labs (VM snapshots) and follow platform rules (TryHackMe, Hack The Box). Keep detailed logs and legal consent for any engagement.","title":"Ethics &amp; Safe Practice"},{"location":"RedTeam_Study_Checklist/#topics-learning-order","text":"Foundations : TCP/IP, routing, Linux/macOS internals, Windows basics Enumeration : service discovery, port scanning, banner analysis (theory + detection) Vulnerabilities 101 : CVE lifecycle, patching, and common vulnerability classes (RCE, XSS, CSRF) Privilege Escalation (theory) : SUID/SGID, sudo misconfigurations, credential/credential stores \u2014 learn defenses , not exploit steps Persistence & Evasion (theory) : cron jobs, startup agents, anomalous services \u2014 detection + mitigation Lateral Movement (theory) : authentication delegation, SSH keys, network segmentation \u2014 focus on hardening Logging & Monitoring : SIEM basics, log collection, alert tuning, EDR concepts Forensics Basics : file timeline analysis, memory capture theory, evidence preservation Red-Team Tools (study list) : LinPEAS (read-only study), BloodHound (graph theory), Adversary Emulation frameworks \u2014 read docs & defensive mappings Cobalt Strike / Emulation (theory only) : understand concepts, do not use unauthorized tools","title":"Topics (learning order)"},{"location":"RedTeam_Study_Checklist/#defensive-mapping-how-offensive-techniques-map-to-detections","text":"Port Scans / Recon \u2192 Detection: high-rate SYN/connection attempts, IDS/IPS alerts, rare source IPs SUID Abuse \u2192 Detection: new/changed SUID binaries, unexpected owner changes, file integrity hashes Cron / Startup Persistence \u2192 Detection: new crontab entries, unknown launch agents, timestamp anomalies Lateral Movement (SSH keys) \u2192 Detection: new authorized_keys, unusual SSH logins, key fingerprints changes Credential Theft \u2192 Detection: abnormal access to secret stores, high-volume file reads, new processes accessing /etc/shadow or keyring locations Malicious Containers \u2192 Detection: unknown container images, outbound connections from containers, new container runtimes","title":"Defensive Mapping (how offensive techniques map to detections)"},{"location":"RedTeam_Study_Checklist/#labs-practice-legal","text":"TryHackMe: structured rooms for beginners\u2192intermediate Hack The Box: realistic labs (use safe lab subnets) Metasploitable / Vuln VM images: isolated in local VM networks with snapshots Build a lab: Controller machine + target VMs + a snapshot policy before tests","title":"Labs &amp; Practice (legal)"},{"location":"RedTeam_Study_Checklist/#learning-resources","text":"\u201cThe Practice of Network Security Monitoring\u201d \u2014 practical monitoring tactics Linux hardening guides (CIS Benchmarks) Vendor docs: Microsoft, Apple, major Linux distros for secure defaults Project documentation: LinPEAS, Osquery, Wazuh (for defensive study)","title":"Learning Resources"},{"location":"RedTeam_Study_Checklist/#ethics-reminder","text":"Always have permission. Use your skills to defend, not to harm.","title":"Ethics Reminder"},{"location":"aiwatcher_usage/","text":"AI Watcher \u2014 NTFY-Throttled Monitor (Brock Core OS) Monitors URLs or local files for pattern matches defined in ~/.config/aiwatcher/rules.txt . Notifications are sent via ntfy.sh only when hits occur (or when NTFY_ON_EMPTY=true ). CLI Flags Flag Description --init Build scaffold (config, sources, rules) --once Run single scan --daemon Loop every 5 min (LaunchAgent compatible) --mute Disable notifications for this run --quiet Suppress \u201c0 picks\u201d (default) --verbose Allow \u201c0 picks\u201d notices --interval MINS Override throttle interval --set topic=NAME Change ntfy topic --show Print config summary Logs: ~/.local/state/aiwatcher/aiwatcher.log Config: ~/.config/aiwatcher/config.env","title":"AI Watcher \u2014 NTFY-Throttled Monitor (Brock Core OS)"},{"location":"aiwatcher_usage/#ai-watcher-ntfy-throttled-monitor-brock-core-os","text":"Monitors URLs or local files for pattern matches defined in ~/.config/aiwatcher/rules.txt . Notifications are sent via ntfy.sh only when hits occur (or when NTFY_ON_EMPTY=true ).","title":"AI Watcher \u2014 NTFY-Throttled Monitor (Brock Core OS)"},{"location":"aiwatcher_usage/#cli-flags","text":"Flag Description --init Build scaffold (config, sources, rules) --once Run single scan --daemon Loop every 5 min (LaunchAgent compatible) --mute Disable notifications for this run --quiet Suppress \u201c0 picks\u201d (default) --verbose Allow \u201c0 picks\u201d notices --interval MINS Override throttle interval --set topic=NAME Change ntfy topic --show Print config summary Logs: ~/.local/state/aiwatcher/aiwatcher.log Config: ~/.config/aiwatcher/config.env","title":"CLI Flags"},{"location":"core_suite/","text":"Brock Core OS \u2014 Core Suite core.sh : main menu (health, sync, prompt, watcher, dashboards) core_dash.sh : CLI dashboard core_dash_web.py + core_web.sh : Web dashboard at http://localhost:7780 LaunchAgents: com.brock.dashboard.http (web), com.brock.aiwatcher (watcher), com.brock.logrotate (logs)","title":"Brock Core OS \u2014 Core Suite"},{"location":"core_suite/#brock-core-os-core-suite","text":"core.sh : main menu (health, sync, prompt, watcher, dashboards) core_dash.sh : CLI dashboard core_dash_web.py + core_web.sh : Web dashboard at http://localhost:7780 LaunchAgents: com.brock.dashboard.http (web), com.brock.aiwatcher (watcher), com.brock.logrotate (logs)","title":"Brock Core OS \u2014 Core Suite"},{"location":"token_notes/","text":"\ud83e\udde0 Brock Core OS \u2014 Dashboard Token Guide Config file: ~/.config/brock_core/core.env Variable: CORE_TOKEN= \ud83d\udd27 Refresh or Replace Token TOKEN=$(uuidgen) echo \"CORE_TOKEN=$TOKEN\" > ~/.config/brock_core/core.env export CORE_TOKEN=$TOKEN bash ~/Projects/devnotes/tools/core_dash.sh Frontend auto-saves the token in browser localStorage (core_token). You only need to paste manually if: - You clear browser data, or - The backend regenerates a new token. \ud83d\udee0 Optional Auto-Fill Patch Edit ~/Projects/devnotes/tools/core_dash_web.py Add this above the HTML output section: # Auto-fill token field in UI html = html.replace('<input id=\"tok\"', f'<input id=\"tok\" value=\"{CORE_TOKEN}\"') This pre-populates the token on every reload so you don\u2019t have to paste it.","title":"\ud83e\udde0 Brock Core OS \u2014 Dashboard Token Guide"},{"location":"token_notes/#brock-core-os-dashboard-token-guide","text":"Config file: ~/.config/brock_core/core.env Variable: CORE_TOKEN=","title":"\ud83e\udde0 Brock Core OS \u2014 Dashboard Token Guide"},{"location":"token_notes/#refresh-or-replace-token","text":"TOKEN=$(uuidgen) echo \"CORE_TOKEN=$TOKEN\" > ~/.config/brock_core/core.env export CORE_TOKEN=$TOKEN bash ~/Projects/devnotes/tools/core_dash.sh Frontend auto-saves the token in browser localStorage (core_token). You only need to paste manually if: - You clear browser data, or - The backend regenerates a new token.","title":"\ud83d\udd27 Refresh or Replace Token"},{"location":"token_notes/#optional-auto-fill-patch","text":"Edit ~/Projects/devnotes/tools/core_dash_web.py Add this above the HTML output section: # Auto-fill token field in UI html = html.replace('<input id=\"tok\"', f'<input id=\"tok\" value=\"{CORE_TOKEN}\"') This pre-populates the token on every reload so you don\u2019t have to paste it.","title":"\ud83d\udee0 Optional Auto-Fill Patch"},{"location":"ai_sessions/selfcheck_note_2025-10-19_02-27-42/","text":"Self-check note 2025-10-19 URL: http://localhost:11434 MODEL: mistral:latest Time: 2025-10-19_02-27-42","title":"Self-check note 2025-10-19"},{"location":"ai_sessions/selfcheck_note_2025-10-19_02-27-42/#self-check-note-2025-10-19","text":"URL: http://localhost:11434 MODEL: mistral:latest Time: 2025-10-19_02-27-42","title":"Self-check note 2025-10-19"},{"location":"ai_sessions/session_2025-10-19_02-08-57/","text":"Session 2025-10-19_02-08-57 Prompt Summarize today\u2019s setup in 5 bullets. Response [no response]","title":"Session 2025-10-19_02-08-57"},{"location":"ai_sessions/session_2025-10-19_02-08-57/#session-2025-10-19_02-08-57","text":"","title":"Session 2025-10-19_02-08-57"},{"location":"ai_sessions/session_2025-10-19_02-08-57/#prompt","text":"Summarize today\u2019s setup in 5 bullets.","title":"Prompt"},{"location":"ai_sessions/session_2025-10-19_02-08-57/#response","text":"[no response]","title":"Response"},{"location":"ai_sessions/session_20251019_164431/","text":"Selfcheck 2025-10-19 16:44:31 CDT","title":"Selfcheck 2025-10-19 16:44:31 CDT"},{"location":"ai_sessions/session_20251019_164431/#selfcheck-2025-10-19-164431-cdt","text":"","title":"Selfcheck 2025-10-19 16:44:31 CDT"},{"location":"ai_sessions/session_20251019_164636/","text":"Selfcheck 2025-10-19 16:46:36 CDT","title":"Selfcheck 2025-10-19 16:46:36 CDT"},{"location":"ai_sessions/session_20251019_164636/#selfcheck-2025-10-19-164636-cdt","text":"","title":"Selfcheck 2025-10-19 16:46:36 CDT"},{"location":"ai_sessions/session_20251019_165058/","text":"Selfcheck 2025-10-19 16:50:58 CDT","title":"Selfcheck 2025-10-19 16:50:58 CDT"},{"location":"ai_sessions/session_20251019_165058/#selfcheck-2025-10-19-165058-cdt","text":"","title":"Selfcheck 2025-10-19 16:50:58 CDT"},{"location":"ai_sessions/session_20251019_165553/","text":"Selfcheck 2025-10-19 16:55:53 CDT","title":"Selfcheck 2025-10-19 16:55:53 CDT"},{"location":"ai_sessions/session_20251019_165553/#selfcheck-2025-10-19-165553-cdt","text":"","title":"Selfcheck 2025-10-19 16:55:53 CDT"},{"location":"ai_sessions/session_20251019_165851/","text":"Selfcheck 2025-10-19 16:58:51 CDT","title":"Selfcheck 2025-10-19 16:58:51 CDT"},{"location":"ai_sessions/session_20251019_165851/#selfcheck-2025-10-19-165851-cdt","text":"","title":"Selfcheck 2025-10-19 16:58:51 CDT"},{"location":"ai_sessions/session_20251019_174542/","text":"Selfcheck 2025-10-19 17:45:42 CDT","title":"Selfcheck 2025-10-19 17:45:42 CDT"},{"location":"ai_sessions/session_20251019_174542/#selfcheck-2025-10-19-174542-cdt","text":"","title":"Selfcheck 2025-10-19 17:45:42 CDT"},{"location":"ai_sessions/session_20251019_174543/","text":"Selfcheck 2025-10-19 17:45:43 CDT","title":"Selfcheck 2025-10-19 17:45:43 CDT"},{"location":"ai_sessions/session_20251019_174543/#selfcheck-2025-10-19-174543-cdt","text":"","title":"Selfcheck 2025-10-19 17:45:43 CDT"},{"location":"ai_sessions/session_20251019_175246/","text":"Selfcheck 2025-10-19 17:52:46 CDT","title":"Selfcheck 2025-10-19 17:52:46 CDT"},{"location":"ai_sessions/session_20251019_175246/#selfcheck-2025-10-19-175246-cdt","text":"","title":"Selfcheck 2025-10-19 17:52:46 CDT"},{"location":"ai_sessions/session_20251019_175946/","text":"Selfcheck 2025-10-19 17:59:46 CDT","title":"Selfcheck 2025-10-19 17:59:46 CDT"},{"location":"ai_sessions/session_20251019_175946/#selfcheck-2025-10-19-175946-cdt","text":"","title":"Selfcheck 2025-10-19 17:59:46 CDT"},{"location":"ai_sessions/session_20251019_175959/","text":"Selfcheck 2025-10-19 17:59:59 CDT","title":"Selfcheck 2025-10-19 17:59:59 CDT"},{"location":"ai_sessions/session_20251019_175959/#selfcheck-2025-10-19-175959-cdt","text":"","title":"Selfcheck 2025-10-19 17:59:59 CDT"},{"location":"ai_sessions/session_20251019_180533/","text":"Selfcheck 2025-10-19 18:05:33 CDT","title":"Selfcheck 2025-10-19 18:05:33 CDT"},{"location":"ai_sessions/session_20251019_180533/#selfcheck-2025-10-19-180533-cdt","text":"","title":"Selfcheck 2025-10-19 18:05:33 CDT"},{"location":"ai_sessions/session_20251019_180534/","text":"Selfcheck 2025-10-19 18:05:34 CDT","title":"Selfcheck 2025-10-19 18:05:34 CDT"},{"location":"ai_sessions/session_20251019_180534/#selfcheck-2025-10-19-180534-cdt","text":"","title":"Selfcheck 2025-10-19 18:05:34 CDT"},{"location":"ai_sessions/session_20251019_191502/","text":"Selfcheck 2025-10-19 19:15:02 CDT","title":"Selfcheck 2025-10-19 19:15:02 CDT"},{"location":"ai_sessions/session_20251019_191502/#selfcheck-2025-10-19-191502-cdt","text":"","title":"Selfcheck 2025-10-19 19:15:02 CDT"},{"location":"ai_sessions/session_20251019_194440/","text":"Selfcheck 2025-10-19 19:44:40 CDT","title":"Selfcheck 2025-10-19 19:44:40 CDT"},{"location":"ai_sessions/session_20251019_194440/#selfcheck-2025-10-19-194440-cdt","text":"","title":"Selfcheck 2025-10-19 19:44:40 CDT"},{"location":"ai_sessions/session_20251019_194441/","text":"Selfcheck 2025-10-19 19:44:41 CDT","title":"Selfcheck 2025-10-19 19:44:41 CDT"},{"location":"ai_sessions/session_20251019_194441/#selfcheck-2025-10-19-194441-cdt","text":"","title":"Selfcheck 2025-10-19 19:44:41 CDT"},{"location":"ai_sessions/session_20251020_124903/","text":"Selfcheck 2025-10-20 12:49:03 CDT","title":"Selfcheck 2025-10-20 12:49:03 CDT"},{"location":"ai_sessions/session_20251020_124903/#selfcheck-2025-10-20-124903-cdt","text":"","title":"Selfcheck 2025-10-20 12:49:03 CDT"},{"location":"ai_sessions/session_20251020_191504/","text":"Selfcheck 2025-10-20 19:15:04 CDT","title":"Selfcheck 2025-10-20 19:15:04 CDT"},{"location":"ai_sessions/session_20251020_191504/#selfcheck-2025-10-20-191504-cdt","text":"","title":"Selfcheck 2025-10-20 19:15:04 CDT"},{"location":"meta/2025-10-21_tool_drop_aiwatcher_suite/","text":"Meta Tool Drop \u2014 Dashboard hotfix Date: 2025-10-21 Branch: main Summary: fix rotate_token parser Files included tools/dashboard_server/static/index.html (sha256: 578c105aab0675ab519ccad10498d65af2f2ba200bbe9a9debbd7ce61cb27c0b , 6102B)\\n Rationale Consolidate AI Watcher control (start/stop/status/enable/disable; menu-driven; dry-run). Sanitize legacy launchd agents and quarantine old com.brock.* . Enforce allowlist for future drift control. Standardize Git loop and meta commit workflow. Verification launchd launchctl list | egrep 'com\\.brock' || echo \"OK none\" processes ps aux | egrep 'aiwatcher|dashboard_server' | egrep -v egrep || echo \"OK none\" Install/Run snippets Control: ~/Projects/devnotes/tools/aiwatcherctl.sh menu Sanitize: ~/Projects/devnotes/tools/svc_sanitize.sh menu Nuke v2: ~/Projects/devnotes/tools/brock_launch_nuke_v2.sh Allowlist enforce: ~/Projects/devnotes/tools/launch_enforce_allowlist.sh Git loop: ~/Projects/devnotes/tools/git_loop.sh --tag auto Environment OS: macOS 26.0.1 Host: brock\u2019s Mac mini User: brockmerkwan Shell: /bin/zsh Generated by tools/meta_tool_commit.sh","title":"Meta Tool Drop \u2014 Dashboard hotfix"},{"location":"meta/2025-10-21_tool_drop_aiwatcher_suite/#meta-tool-drop-dashboard-hotfix","text":"Date: 2025-10-21 Branch: main Summary: fix rotate_token parser","title":"Meta Tool Drop \u2014 Dashboard hotfix"},{"location":"meta/2025-10-21_tool_drop_aiwatcher_suite/#files-included","text":"tools/dashboard_server/static/index.html (sha256: 578c105aab0675ab519ccad10498d65af2f2ba200bbe9a9debbd7ce61cb27c0b , 6102B)\\n","title":"Files included"},{"location":"meta/2025-10-21_tool_drop_aiwatcher_suite/#rationale","text":"Consolidate AI Watcher control (start/stop/status/enable/disable; menu-driven; dry-run). Sanitize legacy launchd agents and quarantine old com.brock.* . Enforce allowlist for future drift control. Standardize Git loop and meta commit workflow.","title":"Rationale"},{"location":"meta/2025-10-21_tool_drop_aiwatcher_suite/#verification","text":"","title":"Verification"},{"location":"meta/2025-10-21_tool_drop_aiwatcher_suite/#launchd","text":"launchctl list | egrep 'com\\.brock' || echo \"OK none\"","title":"launchd"},{"location":"meta/2025-10-21_tool_drop_aiwatcher_suite/#processes","text":"ps aux | egrep 'aiwatcher|dashboard_server' | egrep -v egrep || echo \"OK none\"","title":"processes"},{"location":"meta/2025-10-21_tool_drop_aiwatcher_suite/#installrun-snippets","text":"Control: ~/Projects/devnotes/tools/aiwatcherctl.sh menu Sanitize: ~/Projects/devnotes/tools/svc_sanitize.sh menu Nuke v2: ~/Projects/devnotes/tools/brock_launch_nuke_v2.sh Allowlist enforce: ~/Projects/devnotes/tools/launch_enforce_allowlist.sh Git loop: ~/Projects/devnotes/tools/git_loop.sh --tag auto","title":"Install/Run snippets"},{"location":"meta/2025-10-21_tool_drop_aiwatcher_suite/#environment","text":"OS: macOS 26.0.1 Host: brock\u2019s Mac mini User: brockmerkwan Shell: /bin/zsh Generated by tools/meta_tool_commit.sh","title":"Environment"},{"location":"selfcheck/selfcheck_2025-10-19_02-27-42/","text":"DevNotes Self-check \u2014 v1.5 \"Reliquary\" What this does : verifies Ollama API, streaming JSON, host tools, and repo write path. Results URL: http://localhost:11434 Model: mistral:latest API version: {\"version\":\"0.12.6\"} Streaming first line (sample): 405 method not allowed Host tools present: devask_h devteach_h devnote_h Repo note: /Users/brockmerkwan/Projects/devnotes/docs/ai_sessions/selfcheck_note_2025-10-19_02-27-42.md","title":"DevNotes Self-check \u2014 v1.5 \"Reliquary\""},{"location":"selfcheck/selfcheck_2025-10-19_02-27-42/#devnotes-self-check-v15-reliquary","text":"What this does : verifies Ollama API, streaming JSON, host tools, and repo write path.","title":"DevNotes Self-check \u2014 v1.5 \"Reliquary\""},{"location":"selfcheck/selfcheck_2025-10-19_02-27-42/#results","text":"URL: http://localhost:11434 Model: mistral:latest API version: {\"version\":\"0.12.6\"} Streaming first line (sample): 405 method not allowed Host tools present: devask_h devteach_h devnote_h Repo note: /Users/brockmerkwan/Projects/devnotes/docs/ai_sessions/selfcheck_note_2025-10-19_02-27-42.md","title":"Results"},{"location":"troubleshooting/DevCLI_Troubleshooting_Notes_2025-10-19/","text":"DevCLI Troubleshooting Notes \u2014 2025-10-19 Session Summary \u2022 Built/installed Dev CLI (container & host variants). \u2022 Verified Ollama API reachable (version 0.12.6). \u2022 Confirmed model replies inside container (warm-up via: echo \"hello\" | ollama run mistral:latest). \u2022 Host tools installed: devask_h, devteach_h, devnote_h. \u2022 Git push verified: docs/ai_sessions/session_*.md created and pushed. Unresolved/Observed Issues 1) Container devask/devteach: sometimes no visible output. - Non-stream body occasionally empty; streaming printer previously too strict. 2) Host tools initial run: no output. - Parser expected only 'message.content'; some builds stream 'response'. 3) Docker healthcheck flakiness. - Resolved by removing healthcheck and probing manually. Effective Fixes Applied Today A) Compose simplification: removed healthcheck dependency. B) Container CLI: prefer streaming; warm model explicitly before use. C) Host CLI: robust streaming parser accepts both keys: msg = (d.get(\"message\", {}).get(\"content\") or d.get(\"response\") or \"\") D) Repo flow: devnote_h saves markdown and auto-commits/pushes. Known-Good Commands # Prove API curl -s http://localhost:11434/api/version && echo # Warm model in container docker compose exec -T ollama sh -lc 'echo \"hello\" | ollama run mistral:latest' # Host tools (streaming; guaranteed visible output) export OLLAMA_MODEL=mistral:latest devask_h \"Say one short sentence.\" devteach_h \"Explain POSIX log rotation in 3 steps.\" DEVREPO=\"$HOME/Projects/devnotes\" devnote_h \"Summarize today\u2019s setup in 5 bullets.\" # Raw streaming probe printf '%s' '{\"model\":\"mistral:latest\",\"messages\":[{\"role\":\"user\",\"content\":\"say hi\"}],\"stream\":true}' | curl -sN http://localhost:11434/api/chat -H 'Content-Type: application/json' Plan for Tomorrow 1) Port host-side dual-key streaming parser to container devask/devteach. 2) Optional: add _wait_ollama readiness helper (up to 60s retry). 3) Unify tools: single command with persona flag, e.g. devask_h --teacher \"\u2026\". 4) Add smoke-test script to validate API, stream, and repo write. 5) Keep default model lightweight (mistral:latest or qwen2.5:3b-instruct). Appendix: Paths \u2022 Repo: ~/Projects/devnotes \u2022 AI sessions: docs/ai_sessions/session_*.md \u2022 Host tools: /usr/local/bin/devask_h, devteach_h, devnote_h \u2022 Persona: ~/.devnotesctl/Operator_Teacher.txt \u2022 Docker project: ~/devnotes-docker","title":"DevCLI Troubleshooting Notes \u2014 2025-10-19"},{"location":"troubleshooting/DevCLI_Troubleshooting_Notes_2025-10-19/#devcli-troubleshooting-notes-2025-10-19","text":"","title":"DevCLI Troubleshooting Notes \u2014 2025-10-19"},{"location":"troubleshooting/DevCLI_Troubleshooting_Notes_2025-10-19/#session-summary","text":"\u2022 Built/installed Dev CLI (container & host variants). \u2022 Verified Ollama API reachable (version 0.12.6). \u2022 Confirmed model replies inside container (warm-up via: echo \"hello\" | ollama run mistral:latest). \u2022 Host tools installed: devask_h, devteach_h, devnote_h. \u2022 Git push verified: docs/ai_sessions/session_*.md created and pushed.","title":"Session Summary"},{"location":"troubleshooting/DevCLI_Troubleshooting_Notes_2025-10-19/#unresolvedobserved-issues","text":"1) Container devask/devteach: sometimes no visible output. - Non-stream body occasionally empty; streaming printer previously too strict. 2) Host tools initial run: no output. - Parser expected only 'message.content'; some builds stream 'response'. 3) Docker healthcheck flakiness. - Resolved by removing healthcheck and probing manually.","title":"Unresolved/Observed Issues"},{"location":"troubleshooting/DevCLI_Troubleshooting_Notes_2025-10-19/#effective-fixes-applied-today","text":"A) Compose simplification: removed healthcheck dependency. B) Container CLI: prefer streaming; warm model explicitly before use. C) Host CLI: robust streaming parser accepts both keys: msg = (d.get(\"message\", {}).get(\"content\") or d.get(\"response\") or \"\") D) Repo flow: devnote_h saves markdown and auto-commits/pushes.","title":"Effective Fixes Applied Today"},{"location":"troubleshooting/DevCLI_Troubleshooting_Notes_2025-10-19/#known-good-commands","text":"# Prove API curl -s http://localhost:11434/api/version && echo # Warm model in container docker compose exec -T ollama sh -lc 'echo \"hello\" | ollama run mistral:latest' # Host tools (streaming; guaranteed visible output) export OLLAMA_MODEL=mistral:latest devask_h \"Say one short sentence.\" devteach_h \"Explain POSIX log rotation in 3 steps.\" DEVREPO=\"$HOME/Projects/devnotes\" devnote_h \"Summarize today\u2019s setup in 5 bullets.\" # Raw streaming probe printf '%s' '{\"model\":\"mistral:latest\",\"messages\":[{\"role\":\"user\",\"content\":\"say hi\"}],\"stream\":true}' | curl -sN http://localhost:11434/api/chat -H 'Content-Type: application/json'","title":"Known-Good Commands"},{"location":"troubleshooting/DevCLI_Troubleshooting_Notes_2025-10-19/#plan-for-tomorrow","text":"1) Port host-side dual-key streaming parser to container devask/devteach. 2) Optional: add _wait_ollama readiness helper (up to 60s retry). 3) Unify tools: single command with persona flag, e.g. devask_h --teacher \"\u2026\". 4) Add smoke-test script to validate API, stream, and repo write. 5) Keep default model lightweight (mistral:latest or qwen2.5:3b-instruct).","title":"Plan for Tomorrow"},{"location":"troubleshooting/DevCLI_Troubleshooting_Notes_2025-10-19/#appendix-paths","text":"\u2022 Repo: ~/Projects/devnotes \u2022 AI sessions: docs/ai_sessions/session_*.md \u2022 Host tools: /usr/local/bin/devask_h, devteach_h, devnote_h \u2022 Persona: ~/.devnotesctl/Operator_Teacher.txt \u2022 Docker project: ~/devnotes-docker","title":"Appendix: Paths"},{"location":"troubleshooting/daily_log_2025-10-19/","text":"Daily Log \u2014 2025-10-19 Focus: Containerized Dev CLI with Ollama; host tools with guaranteed streaming; Git auto-logging. What we shipped Host tools: devask_h , devteach_h , devnote_h (streaming, tolerant JSON parser). Troubleshooting Notes (PDF/MD) added to repo. Self-check script prepared: devcli_selfcheck (v1.5 \"Reliquary\"). Notes on issues & fixes Empty non-stream bodies \u2192 switched to streaming. Parser now accepts both message.content and response keys. Docker healthcheck removed to avoid false negatives. Time Start\u2013End window: Oct 18 \u2192 Oct 19 (America/Chicago). Active build/test time (approx): 3.5\u20134.5 hours . Next Steps Port parser improvements into container scripts. Add readiness wait helper and a one-command smoke-test.","title":"Daily Log \u2014 2025-10-19"},{"location":"troubleshooting/daily_log_2025-10-19/#daily-log-2025-10-19","text":"Focus: Containerized Dev CLI with Ollama; host tools with guaranteed streaming; Git auto-logging.","title":"Daily Log \u2014 2025-10-19"},{"location":"troubleshooting/daily_log_2025-10-19/#what-we-shipped","text":"Host tools: devask_h , devteach_h , devnote_h (streaming, tolerant JSON parser). Troubleshooting Notes (PDF/MD) added to repo. Self-check script prepared: devcli_selfcheck (v1.5 \"Reliquary\").","title":"What we shipped"},{"location":"troubleshooting/daily_log_2025-10-19/#notes-on-issues-fixes","text":"Empty non-stream bodies \u2192 switched to streaming. Parser now accepts both message.content and response keys. Docker healthcheck removed to avoid false negatives.","title":"Notes on issues &amp; fixes"},{"location":"troubleshooting/daily_log_2025-10-19/#time","text":"Start\u2013End window: Oct 18 \u2192 Oct 19 (America/Chicago). Active build/test time (approx): 3.5\u20134.5 hours .","title":"Time"},{"location":"troubleshooting/daily_log_2025-10-19/#next-steps","text":"Port parser improvements into container scripts. Add readiness wait helper and a one-command smoke-test.","title":"Next Steps"}]}