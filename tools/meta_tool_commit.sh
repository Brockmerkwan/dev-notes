#!/usr/bin/env bash
# meta_tool_commit.sh — Brock Core OS "Meta Tool Creation" uploader
# Creates a dated meta note + changelog entry, then git add/commit/tag/push.
# Idempotent; accepts title, summary, and file list. Defaults cover last touched tools.
set -euo pipefail

REPO="${REPO:-$HOME/Projects/devnotes}"
TITLE="${TITLE:-AI Watcher suite: ctl + sanitizers + allowlist}"
SUMMARY="${SUMMARY:-Install + control + cleanup for aiwatcher; launchd sweep + allowlist}"
FILES_DEFAULT=(
  tools/aiwatcherctl.sh
  tools/svc_sanitize.sh
  tools/brock_launch_nuke_v2.sh
  tools/launch_enforce_allowlist.sh
  tools/git_loop.sh
)
# Allow override via FILES env (space-delimited)
read -r -a FILES <<< "${FILES:-${FILES_DEFAULT[*]}}"

cd "$REPO"
branch="$(git rev-parse --abbrev-ref HEAD)"
ts_date="$(date +%Y-%m-%d)"
ts_tag="$(date +%Y.%m.%d-%H%M)"
note_dir="docs/meta"
note_file="$note_dir/${ts_date}_tool_drop_aiwatcher_suite.md"
mkdir -p "$note_dir"

# collect environment snapshot
os="$(sw_vers -productName 2>/dev/null || echo macOS) $(sw_vers -productVersion 2>/dev/null || echo '')"
host="$(scutil --get ComputerName 2>/dev/null || hostname)"
shell="$SHELL"
user="$(id -un)"

# Build files table + checksums (only those that exist)
table=""
for p in "${FILES[@]}"; do
  if [[ -f "$p" ]]; then
    sum="$(shasum -a 256 "$p" | awk '{print $1}')"
    sz="$(wc -c < "$p" | tr -d ' ')"
    table+="- \`$p\`  (sha256: \`$sum\`, ${sz}B)\n"
  fi
done

# Create meta note (overwrite safely each run)
cat > "$note_file" <<EOF
# Meta Tool Drop — $TITLE
**Date:** $ts_date  
**Branch:** \`$branch\`  
**Summary:** $SUMMARY

## Files included
$table

## Rationale
- Consolidate AI Watcher control (start/stop/status/enable/disable; menu-driven; dry-run).
- Sanitize legacy launchd agents and quarantine old \`com.brock.*\`.
- Enforce allowlist for future drift control.
- Standardize Git loop and meta commit workflow.

## Verification
### launchd
\`\`\`bash
launchctl list | egrep 'com\.brock' || echo "OK none"
\`\`\`

### processes
\`\`\`bash
ps aux | egrep 'aiwatcher|dashboard_server' | egrep -v egrep || echo "OK none"
\`\`\`

## Install/Run snippets
- Control: \`~/Projects/devnotes/tools/aiwatcherctl.sh menu\`
- Sanitize: \`~/Projects/devnotes/tools/svc_sanitize.sh menu\`
- Nuke v2: \`~/Projects/devnotes/tools/brock_launch_nuke_v2.sh\`
- Allowlist enforce: \`~/Projects/devnotes/tools/launch_enforce_allowlist.sh\`
- Git loop: \`~/Projects/devnotes/tools/git_loop.sh --tag auto\`

## Environment
- OS: $os
- Host: $host
- User: $user
- Shell: $shell

> Generated by \`tools/meta_tool_commit.sh\`
EOF

# Append CHANGELOG.md (create if absent)
chg="CHANGELOG.md"
entry="### $ts_date — Meta: $TITLE
- $SUMMARY
- Files: $(printf "%s " "${FILES[@]}")"

if [[ -f "$chg" ]]; then
  printf "\n%s\n" "$entry" >> "$chg"
else
  printf "# Changelog\n\n%s\n" "$entry" > "$chg"
fi

# Stage + Conventional Commit + tag + push
git add "$note_file" "$chg" $(printf "%s " "${FILES[@]}" | xargs -n1 echo | awk '{printf "%s ",$0}' 2>/dev/null || true)
if git diff --cached --quiet; then
  echo "No staged changes; skipping commit."
else
  msg="meta(tools): $TITLE — notes + changelog (#meta)"
  git commit -m "$msg" -m "$SUMMARY"
fi

tag="meta-$ts_tag"
# Only create tag if it doesn't already exist
if ! git rev-parse "$tag" >/dev/null 2>&1; then
  git tag -a "$tag" -m "$TITLE"
fi

git push --follow-tags

# Post-verify
echo "---- LAST 5 COMMITS ----"
git --no-pager log -n 5 --oneline --decorate --graph
echo "Note: $note_file"
echo "Tag:  $tag"
